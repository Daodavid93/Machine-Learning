{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Karush-Kuhn-Tucker conditions. "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The KKT conditions are usually not solved directly in the analysis of practical large nonlinear\n",
    "programming problems by software packages. Iterative successive approximation methods are most\n",
    "often used. The results, however they are obtained, must satisfy these conditions"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Examples \n",
    "1.\n",
    "$$min J = x_1^2 +x_2^2 x_3^2 + x_4^2$$\n",
    "The solution is x1 = x2 = x3 = x4 = 0 and J = 0.\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "2.\n",
    "$$min J = x_1^2 +x_2^2 x_3^2 + x_4^2$$\n",
    "subject to\n",
    "$$ x_1+x_2+x_3+x_4=1\n",
    "\n",
    "Solution:\n",
    "$$ min J = x_1^2 +x_2^2 x_3^2 + x_4^2 +\\gamma( x_1+x_2+x_3+x_4 - 1)  $$\n",
    "In this context, $\\gamma$  is called a Lagrange multiplier. The KKT conditions reduce, in this case, to setting  $ \\frac{\\partial J}{\\partial x} $  to zero:\n",
    "$$\\frac{\\partial{J}}{\\partial{x}} = \\begin{bmatrix} 2x - \\gamma  \\\\ \n",
    "2x - \\gamma  \\end{bmatrix} $$ = 0  \n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "###  References \n",
    "[1] Stanley B. Gershwin Massachusetts Institute of Technology"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.1"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
